import i18Plugin, { useLocaleStore } from "@dzangolab/vue3-i18n";
import { LoadingButton, LoadingIcon } from "@dzangolab/vue3-ui";
import { mount, RouterLinkStub } from "@vue/test-utils";
import { createPinia } from "pinia";
import { beforeEach, describe, expect, it, vi } from "vitest";
import { useRouter } from "vue-router";

import appConfig from "../../../components/__test__/config";
import PasswordResetRequestAcknowledge from "../../PasswordResetRequestAcknowledge.vue";

import type { VueWrapper } from "@vue/test-utils";

vi.mock("vue-router");

describe("PasswordResetRequestAcknowledge", async () => {
  const pinia = createPinia();

  const { setLocale } = useLocaleStore(appConfig.slug);

  const locales = ["en", "fr"];

  useRouter.mockReturnValue({
    push: vi.fn(),
  });

  beforeEach(() => {
    useRouter().push.mockReset();
  });

  for (const locale of locales) {
    setLocale(locale);

    const wrapper: VueWrapper = mount(PasswordResetRequestAcknowledge, {
      global: {
        components: {
          LoadingButton,
          LoadingIcon,
        },
        plugins: [
          pinia,
          [
            i18Plugin,
            {
              config: appConfig,
            },
          ],
        ],
        stubs: {
          RouterLink: RouterLinkStub,
        },
      },
    });

    await wrapper.find("button").trigger("click");

    it("Redirects to login page", () => {
      expect(useRouter().push).toHaveBeenCalledWith({
        name: "login",
      });
    });
  }
});
